steps:
  - label: ":julia: Format Check"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    agents:
      queue: "default"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 240
    command: |
      julia  -e 'using Pkg; Pkg.add(PackageSpec(name="JuliaFormatter"))'
      julia  -e 'using JuliaFormatter; format(".", verbose=true)'
      julia -e '
          out = Cmd(`git diff --name-only`) |> read |> String
          if out == ""
              exit(0)
          else
              @error "Some files have not been formatted !!!"
              write(stdout, out)
              exit(1)
          end'

  - label: ":julia: Julia {{matrix.julia}} (CPU)"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.julia}}"
      - JuliaCI/julia-test#v1:
          test_args: "--quickfail"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - ext
    agents:
      queue: "default"
    env:
      GROUP: "CPU"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 240
    matrix:
      setup:
        julia:
          - "1"
          - "nightly"
      adjustments:
        - with:
            julia: "nightly"
          soft_fail: true

  - label: ":julia: Julia {{matrix.julia}} (CUDA)"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.julia}}"
      - JuliaCI/julia-test#v1:
          test_args: "--quickfail"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - ext
    agents:
      queue: "cuda"
    env:
      GROUP: "CUDA"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 240
    matrix:
      setup:
        julia:
          - "1"
          - "nightly"
      adjustments:
        - with:
            julia: "nightly"
          soft_fail: true

env:
  CODECOV_TOKEN: "9349e5e6-16b3-4c9c-9496-304a84a7358d" # Someday I will regret doing this